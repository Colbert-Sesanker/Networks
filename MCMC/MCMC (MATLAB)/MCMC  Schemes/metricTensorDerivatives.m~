% Calculates the partial derivatives of the metric tensor used in 
% Laplace Beltrami Operator

function GDeriv = metric_Tensor_Deriviatives...
                   (... 
                     sensitivities_1,   speciesObserved,...
                     sensitivities_2,   numSampledParams,...
                     currentNoise,      sampledParameters,... 
                     priorThirdDerivative...
                   )
    
    GDeriv = cell(1, numSampledParams);  
    
    for k = 1: numSampledParams
        % Allocate cell array for each value of k
        GDeriv{k} = zeros(numSampledParams,...
                          numSampledParams);
        
        % Use sensitivities
        % Follows from applying product rule on 
        % G(i,j) = sum_{species}(sens_i(species) * cov_mat * sens_j(species)) 
        for SpeciesNum_a = speciesObserved
            for i = 1: numSampledParams
                for j = 1: numSampledParams
                    
                    GDeriv{k}(i, j) = GDeriv{k}(i, j) + ...                    
                                                        ...
                    (sensitivities_2{i, k}(:, SpeciesNum_a)'  *...
                     sensitivities_1{j}(:, SpeciesNum_a)...                
                     / currentNoise(SpeciesNum_a)...
                    ) + ...
                        ...
                    (sensitivities_1{i}(:, SpeciesNum_a)'     *...
                     sensitivities_2{j, k}(:, SpeciesNum_a)... 
                     / currentNoise(SpeciesNum_a)...
                    );

                end
            end
        end
        
        % Add prior to the derivative of metric tensor
        % Follows from (log(posterior))_{theta,theta,theta}, third derivative of 
        % log(posterior). Note: this is a prior on a matrix of all sampled parameters        
        GDeriv{k}        = GDeriv{k} - ...
                           priorThirdDerivative(numSampledParams,...
                                                  sampledParameters);                                  
    end % for    
        
end


