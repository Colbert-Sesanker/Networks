% compute sensitivities using method defined by switch
% variable 'sensitivityMethod'. also compute trajectories

function [trajectories,      ...
          sensitivities_1,   ...
          sensitivities_2] = ...
                             ...
              getSensAndTrajectories...
                                    ...
                        ( sensitivityMethod,      zeroMetricTensorDerivatives,...
                          equations,              equations_AD,...  
                          equationsSens,...         
                          initialValues,          initialValuesSens,           ...
                          timePoints,             numStates,                 ...  
                          numSampledParams,       totalParameters,              ...
                          sampledParam_idxs,      epsilon                       ...                                         
                        )   

% calculate 1st and 2nd order sensitivities
switch sensitivityMethod  
    
    case 'analytic (symbolic)'   
        [  ~    , ...
        trajectories] = ...
            integrateEquations( equationsSens,     timePoints,...
                                 initialValuesSens, totalParameters...
                               );
    
        [sensitivities_1,...
         sensitivities_2] = get_Sensitivities_Analytic(trajectories,... 
                                                       numStates,... 
                                                       numSampledParams);
    case 'finite differences'

        [  ~    , ...
        trajectories] = ...
             integrateEquations( equations,     timePoints,...
                                  initialValues, totalParameters...
                                );   
                                
        speciesEstimates  = extractSpeciesTrajectories(trajectories,...
                                                       numStates);
        [sensitivities_1,...
         sensitivities_2] = ...
                                 ...
        getSensitivities_FD( equations,              numStates,... 
                              numSampledParams,       totalParameters,...
                              sampledParam_idxs,     speciesEstimates,...
                              timePoints,             initialValues,...
                              epsilon,                zeroMetricTensorDerivatives...                
                            );    
   
    case 'automatic differentiation' 
       
        [      ~    , ...
         trajectories,... 
         sensitivities_1] = ...
                            ...                           
                integrateEquations( equations,          timePoints,...
                                    initialValues,      totalParameters,...
                                    ...
                                    equations_AD,       numStates,...        
                                    sampledParam_idxs,  numSampledParams... 
                                  ); 
         sensitivities_2 = {{}};   % temp until design method to compute          
end % switch   

end % function

